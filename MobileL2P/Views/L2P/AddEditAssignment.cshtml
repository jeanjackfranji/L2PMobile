@using L2PAPIClient.DataModel
@using MobileL2P.Services
@model MobileL2P.Models.AssignmentViewModel
@{
    L2PCourseInfoData course = ViewData["ChosenCourse"] as L2PCourseInfoData;

    bool? isEditMode = ViewData["EditMode"] as bool?;
    if (isEditMode.HasValue)
    {
        ViewData["Title"] = Resources.EditAssignment;
    }
    else
    {
        ViewData["Title"] = Resources.AddAssignment;
    }

    string currentDirectory = ViewData["CurrentDirectory"] as string;
}

<nav>
    <div class="nav-wrapper white">
        <div class="col s12">
            <a href="@Url.Action("WhatsNew", "MyCourses", new{ cId = @course.uniqueid})" class="breadcrumb blue-text" style="font-size: 9px; margin-left: 10px;">@Tools.truncateString(course.courseTitle, 20) @((course.courseTitle != null && course.courseTitle.Length > 20) ? "..." : "")</a>
            <a href="@Url.Action("Assignment", "MyCourses", new{ cId = @course.uniqueid})" class="breadcrumb blue-text" style="font-size: 9px">Assignment</a>
            <a href="#!" class="breadcrumb blue-text" style="font-size: 9px">@(isEditMode.HasValue ? "Edit" : "Add")</a>
        </div>
    </div>
</nav>
<div class="row">
    @using (Html.BeginForm(isEditMode.HasValue ? "EditAssignment" : "AddAssignment", "L2P", new { cId = @course.uniqueid }, FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="Title">@Resources.Title*</label>
                @Html.TextBoxFor(m => m.Title, new { @class = "validate", type = "text"})
                <span>@Html.ValidationMessageFor(m => m.Title)</span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="Description">@Resources.Description*</label>
                @Html.TextBoxFor(m => m.Description, new { @class = "validate", type = "text"})
                <span>@Html.ValidationMessageFor(m => m.Description)</span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.CheckBoxFor(m => m.groupSubmissionAllowed, null);
                <label for="groupSubmissionAllowed">@Resources.GrpSubmission</label>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="totalPoint">@Resources.TotalPoints*</label>
                @Html.TextBoxFor(m => m.totalPoint, new { @class = "validate", type = "number"})
                <span>@Html.ValidationMessageFor(m => m.totalPoint)</span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="DueDate">@Resources.DueDate*</label>
                @Html.TextBoxFor(m => m.DueDate, new { @class = "datepicker", type = "date" })
                <span>@Html.ValidationMessageFor(m => m.DueDate)</span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="DueDatehours">@Resources.DueDateTime*</label>
                @Html.TextBoxFor(m => m.DueDatehours, new { @id = "pick-a-time2"})
                <span>@Html.ValidationMessageFor(m => m.DueDatehours)</span>
            </div>
        </div>

        <div class="row right-align">
            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.itemId, new { @hidden = "hidden", @Value = isEditMode.HasValue ? Model.itemId + "" : "-1" })
                <button class="btn waves-effect waves-light" type="submit" name="action">
                    Submit
                    <i class="material-icons right">send</i>
                </button>
            </div>
        </div>
    }
</div>


<script>
    $(document).ready(function () {
        $('.datepicker').pickadate({
            selectMonths: true, // Creates a dropdown to control month
            selectYears: 16 // Creates a dropdown of 15 years to control year
        });

        $("input[name='groupSubmissionAllowed']")[1].remove();
    });

    $(function () {
        $('#pick-a-time2').lolliclock({ autoclose: true });
    });

</script>

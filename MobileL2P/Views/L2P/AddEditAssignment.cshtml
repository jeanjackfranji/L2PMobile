@using L2PAPIClient.DataModel
@using MobileL2P.Services
@model MobileL2P.Models.AssignmentViewModel
@{
    L2PCourseInfoData course = ViewData["ChosenCourse"] as L2PCourseInfoData;

    bool? isEditMode = ViewData["EditMode"] as bool?;
    if (isEditMode.HasValue)
    {
        ViewData["Title"] = Resources.EditAssignment;
    }
    else
    {
        ViewData["Title"] = Resources.AddAssignment;
    }

    string currentDirectory = ViewData["CurrentDirectory"] as string;
}

<nav>
    <div class="nav-wrapper white">
        <div class="col s12">
            <a href="@Url.Action("WhatsNew", "MyCourses", new{ cId = @course.uniqueid})" class="breadcrumb blue-text" style="font-size: 9px; margin-left: 10px;">@Tools.truncateString(course.courseTitle, 20) @((course.courseTitle != null && course.courseTitle.Length > 20) ? "..." : "")</a>
            <a href="@Url.Action("Assignment", "MyCourses", new{ cId = @course.uniqueid})" class="breadcrumb blue-text" style="font-size: 9px">@Resources.Assignments</a>
            <a href="#!" class="breadcrumb blue-text" style="font-size: 9px">@(isEditMode.HasValue ? "Edit" : "Add")</a>
        </div>
    </div>
</nav>
<div class="row">
@using (Html.BeginForm(isEditMode.HasValue ? "EditAssignment" : "AddAssignment", "L2P", new { cId = @course.uniqueid }, FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
{
        <div class="row">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            <div class="input-field col s12">
               <label for="Title">@Resources.Title*</label>
                @Html.TextBoxFor(m => m.Title, new { @class = "validate", type = "text" })
                <span class="red-text">@Html.ValidationMessageFor(m => m.Title)</span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="Description">@Resources.Description*</label>
                @Html.TextBoxFor(m => m.Description, new { @class = "validate", type = "text" })
                <span class="red-text">@Html.ValidationMessageFor(m => m.Description)</span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="groupSubmissionAllowed">@Resources.GrpSubmission</label>
                @Html.CheckBoxFor(m => m.groupSubmissionAllowed, new { @checked = "checked" });
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="totalPoint">@Resources.TotalPoints*</label>
                @Html.TextBoxFor(m => m.totalPoint, new { @class = "validate", type = "number" })
                <span class="red-text">@Html.ValidationMessageFor(m => m.totalPoint)</span>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="DueDate">@Resources.DueDate*</label>
                @Html.TextBoxFor(m => m.DueDate, new { @class = "datepicker", type = "date" })
             </div>
        </div>
<div class="row">
    <div class="input-field col s12">
        <label for="DueDatehours">@Resources.DueDateTime*</label>
        @Html.TextBoxFor(m => m.DueDatehours, new { @id = "pick-a-time2" })
        <span class="red-text">@Html.ValidationMessageFor(m => m.DueDatehours)</span>
    </div>
</div>

<div class="row">
    <div class="input-field col s12">
        <p>@Resources.UploadMessage</p>
        <div class="file-field input-field">
            <div class="btn blue">
                <span>@Resources.UploadFile</span>
                <input type="file" id="file" name="file" />
            </div>
            <div class="file-path-wrapper">
                <input class="file-path validate" type="text">
            </div>
        </div>
        </div>
    </div>


<div class="row">
    <div class="input-field col s12">
        <p>@Resources.SampleSolution</p>
        <div class="file-field input-field">
            <div class="btn blue">
                <span>@Resources.UploadFile</span>
                <input type="file" id="fileSo" name="fileSo" />
            </div>
            <div class="file-path-wrapper">
                <input class="file-path validate" type="text">
            </div>
        </div>
    </div>
</div>



<div class="row right-align">
    <div class="input-field col s12">
        @Html.TextBoxFor(m => m.itemId, new { @hidden = "hidden", @Value = isEditMode.HasValue ? Model.itemId + "" : "-1" })
        <button class="btn waves-effect waves-light" type="submit" name="action">
            Submit
            <i class="material-icons right">send</i>
        </button>
    </div>
</div>
}
</div>


<script>


    $(document).ready(function () {
        $('.datepicker').pickadate({
            selectMonths: true, // Creates a dropdown to control month
            selectYears: 16 // Creates a dropdown of 15 years to control year
        });
        $(function () {
            $('#pick-a-time1').lolliclock({ autoclose: true });
        });
        $(function () {
            $('#pick-a-time2').lolliclock({ autoclose: true });
        });
        $(function () {
            $('#pick-a-time3').lolliclock({ autoclose: true });
        });

        $('input[id="cb_check_all"]').change(function () {
            if ($(this).is(':checked')) {
                $('input[name="groupSubmissionAllowed"]').prop('checked', true);

            } else {
                $('input[name="groupSubmissionAllowed"]').prop('checked', false);

            }

        });


    });
</script>

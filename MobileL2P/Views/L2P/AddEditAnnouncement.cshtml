@using L2PAPIClient.DataModel
@using MobileL2P.Services
@model MobileL2P.Models.AnnouncementViewModel
@{
    L2PCourseInfoData course = ViewData["ChosenCourse"] as L2PCourseInfoData;

    bool? isEditMode = ViewData["EditMode"] as bool?;
    if (isEditMode.HasValue)
    {
        ViewData["Title"] = Resources.EditAnnouncement;
    }
    else
    {
        ViewData["Title"] = Resources.AddAnnouncement;
    }
}

<nav>
    <div class="nav-wrapper white">
        <div class="col s12">
            <a href="@Url.Action("WhatsNew", "MyCourses", new{ cId = @course.uniqueid})" class="breadcrumb blue-text" style="font-size: 9px; margin-left: 10px;">@Tools.truncateString(course.courseTitle, 20) @((course.courseTitle != null && course.courseTitle.Length > 20) ? "..." : "")</a>
            <a href="@Url.Action("Announcement", "MyCourses", new{ cId = @course.uniqueid})" class="breadcrumb blue-text" style="font-size: 9px">@Resources.Announcement</a>
            <a href="#!" class="breadcrumb blue-text" style="font-size: 9px">@(isEditMode.HasValue ? "Edit" : "Add")</a>
        </div>
    </div>
</nav>
<div class="row">
    @using (Html.BeginForm(isEditMode.HasValue ? "EditAnnouncement" : "AddAnnouncement", "L2P", new { cId = @course.uniqueid }, FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            <div class="input-field col s12">
                <label for="title">@Resources.Title</label>
                @Html.TextBoxFor(m => m.title, new { @class = "validate", type = "text", required = "required" })
                <span>@Html.ValidationMessageFor(m => m.title)</span>
            </div>
        </div>

        <div class="row">
            <div class="input-field col s12">
                <label for="body">@Resources.Body</label>
                @Html.TextBoxFor(m => m.body, new { @class = "validate", type = "text"})
                <span>@Html.ValidationMessageFor(m => m.body)</span>
            </div>
        </div>
                <div class="row">
                    <div class="input-field col s12">
                        <p>@Resources.UploadMessage</p>
                        <div class="file-field input-field">
                            <div class="btn blue">
                                <span>@Resources.UploadFile</span>
                                <input type="file" id="file" name="file" />
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row right-align">
                    <div class="input-field col s12">
                        @Html.TextBoxFor(m => m.itemId, new { @hidden = "hidden", @Value = isEditMode.HasValue ? Model.itemId + "" : "-1" })
                        <button class="btn waves-effect waves-light" type="submit" name="action">
                            Submit
                            <i class="material-icons right">send</i>
                        </button>
                    </div>
                </div>
    }
</div>
@using L2PAPIClient.DataModel;
@using MobileL2P.Services;
@model MobileL2P.Models.FolderViewModel
@{
    ViewData["Title"] = Resources.MediaLibrary;
    L2PCourseInfoData course = ViewData["ChosenCourse"] as L2PCourseInfoData;
    L2PRole userRole = ViewData["userRole"] as L2PRole;
    List<L2PMediaLibraryElement> mediaLibrary = ViewData["CourseMediaLibrary"] as List<L2PMediaLibraryElement>;
    string currentDirectory = ViewData["CurrentDirectory"] as string;
}

<nav>
    <div class="nav-wrapper white">
        <div class="col s12">
            <a href="@Url.Action("WhatsNew", "MyCourses",new { cId = @course.uniqueid })" class="breadcrumb blue-text" style="font-size: 9px; margin-left: 10px;">@Tools.truncateString(course.courseTitle, 20) @((course.courseTitle != null && course.courseTitle.Length > 20) ? "..." : "")</a>
            <a href="@Url.Action("MediaLibrary", "MyCourses",new { cId = @course.uniqueid })" class="breadcrumb blue-text" style="font-size: 9px">@ViewData["Title"]</a>
        </div>
    </div>
</nav>
<div class="col s12">
    <ul class="collection with-header">
        <li class="collection-header" style="padding-left: 10px">
            <div class="row padding-left-zero">
                <div class="col s1" style="margin-top: 22px">
                    <input id="cb_check_all" type="checkbox" />
                    <label for="cb_check_all"></label>
                </div>
                <div class="col s11 center-align">
                    <h4>@ViewData["Title"]</h4>
                </div>
            </div>
        </li>
        @{
            foreach (L2PMediaLibraryElement md in mediaLibrary)
            {
                L2PFileInformationElement fileInfo = Tools.DeserializeObject<L2PFileInformationElement>(md.fileInformation);
                <li class="collection-item avatar padding-left-10">
                    <input type="checkbox" name="tbl_cb" id="@md.itemId" />
                    <label class="label-checkbox" for="@md.itemId"></label>
                    @if (md.isDirectory)
                    {
                        <i class="large material-icons circle white grey-text rel-position" style="font-size: 40px">folder_open</i>
                        <span class="title"><a href="@Url.Action("MediaLibrary", "MyCourses", new { cId = @course.uniqueid, ExtdDir=@md.name})">@md.name</a></span>
                        <a id="a-secondary-content" class="secondary-content" href="@Url.Action("MediaLibrary", "MyCourses", new { cId = @course.uniqueid, ExtdDir= @md.name})"><i class="material-icons blue-text">send</i></a>
                    }
                    else
                    {
                        <img src="@Tools.getImagePathByFileName(md.name)" class="circle rel-position" style="background-size: 80% !important" />
                        <span class="title"><a href="@Url.Action("Downloads", "MyCourses", new { cId = @course.uniqueid, url=@md.selfUrl, filename=@md.name})">@md.name</a></span>
                        <a id="a-secondary-content" class="secondary-content" href="@Url.Action("Downloads", "MyCourses", new { cId = @course.uniqueid, url=@md.selfUrl, filename=@md.name})"><i class="material-icons blue-text">get_app</i></a>
                    }
                    <p class="margin-left-25">
                        @Html.Raw(fileInfo != null ? "<b>Size: </b>" + Tools.ToFileSize(fileInfo.fileSize) : "")
                    </p>
                </li>
            }
        }
    </ul>
    @if (userRole.role.Contains("managers") || userRole.role.Contains("tutors"))
    {
        <div class="fixed-action-btn horizontal" style="bottom: 5px; right: 30px;">
            <a class="btn-floating btn-large blue darken-3">
                <i class="material-icons">menu</i>
            </a>
            <ul>
                <li><a href="#confirmModal" class="btn-floating waves-effect waves-light red modal-trigger"><i class="material-icons">delete</i></a></li>
                <li><a href="#newFolderModal" class="btn-floating waves-effect waves-light green modal-trigger"><i class="material-icons">create_new_folder</i></a></li>
                <li><a href="#newFileModal" class="btn-floating waves-effect waves-light green modal-trigger"><i class="material-icons">note_add</i></a></li>
            </ul>
        </div>
    }
</div>

<!-- Confirm Delete Modal -->
<div id="confirmModal" class="modal bottom-sheet">
    <div class="modal-content">
        <h4>Delete Media(s)</h4>
        <p>Are you sure you want to delete the selected Media(s) or folder(s)?</p>
    </div>
    <div class="modal-footer centered">
        <a class="modal-action modal-close waves-effect waves-light btn-flat red white-text">No</a>
        <a id="a_delete_medias" href="@Url.Action("DeleteMediaLibrary", "L2P", new { cId = @course.uniqueid, curDir = @currentDirectory})" class="modal-action modal-close waves-effect waves-light btn-flat green white-text ">Yes</a>
    </div>
</div>

<!-- New Folder Modal -->
<div id="newFolderModal" class="modal bottom-sheet">
    @using (Html.BeginForm("AddFolder", "L2P", new { cId = @course.uniqueid, ModelNb = "1", curDir = @currentDirectory }, FormMethod.Post, new { role = "form" }))
    {
        <div class="modal-content">
            <h4>New Folder</h4>
            <div class="row">
                <div class="input-field col s12">
                    <label for="Name">Name*</label>
                    @Html.TextBoxFor(m => m.Name, new { @class = "validate", type = "text", required = "required" })
                    <span class="red-text">@Html.ValidationMessageFor(m => m.Name)</span>
                </div>
            </div>
        </div>
        <div class="modal-footer centered">
            <a class="modal-action modal-close waves-effect waves-light btn-flat red white-text" style="margin-right: 10px"><i class="material-icons right">clear</i>Cancel</a>
            <button class="modal-action left waves-effect waves-light btn-flat green white-text" style="margin-left: 10px" type="submit" name="action">
                Submit
                <i class="material-icons right">send</i>
            </button>
        </div>
    }
</div>

<!-- New File Modal -->
<div id="newFileModal" class="modal bottom-sheet">
    @using (Html.BeginForm("AddFile", "L2P", new { cId = @course.uniqueid, ModelNb = "1", curDir = @currentDirectory }, FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
    {   <div class="modal-content">
        <h4>New File</h4>
        <div class="row">
            <p>Please choose a file to upload in Media Library</p>
            <div class="file-field input-field">
                <div class="btn blue">
                    <span>Upload File</span>
                    <input type="file" id="file" name="file" accept="file_extension|audio/*|video/*|image/*">
                </div>
                <div class="file-path-wrapper">
                    <input class="file-path validate" type="text">
                </div>
            </div>
        </div>
    </div>
        <div class="modal-footer centered">
            <a class="modal-action modal-close waves-effect waves-light btn-flat red white-text" style="margin-right: 10px"><i class="material-icons right">clear</i>Cancel</a>
            <button class="modal-action left waves-effect waves-light btn-flat green white-text" style="margin-left: 10px" type="submit" name="action">
                Submit
                <i class="material-icons right">send</i>
            </button>
        </div>
    }
</div>

<script>
    //Global Variables
    var str = "";
    var url = "/L2P/DeleteMediaLibrary?cId=@course.uniqueid&curDir=@currentDirectory&MLIds=";

    $(function () {
        $('.modal-trigger').leanModal(); // Set the Modal to Trigger later on

        if ('@ViewData["Message"]' != '') {
            Materialize.toast('@ViewData["Message"]', 2000) // 2000 is the duration of the toast
        }
    });

    //Method to check/uncheck boxes
    $('input[id="cb_check_all"]').change(function () {
        if ($(this).is(':checked')) {
            $('input[name="tbl_cb"]').prop('checked', true);
            $('input[name="tbl_cb"]').each(function (index, value) {
                str += $(this).attr("id") + '-';
            });
        } else {
            $('input[name="tbl_cb"]').prop('checked', false);
            str = "";
        }
        $("#a_delete_medias").attr("href", url + str);
    });

    //Method to check/uncheck boxes and handle accordingly to delete hyperlinks
    $('input[name="tbl_cb"]').change(function () {
        if ($(this).is(':checked')) {
            if (str.indexOf($(this).attr("id") + '-') < 0) {
                str += $(this).attr("id") + '-';
            }
        } else {
            if (str.indexOf($(this).attr("id") + '-') >= 0) {
                str = str.replace($(this).attr("id") + '-', '');
            }
        }
        $("#a_delete_medias").attr("href", url + str);
    });

</script>
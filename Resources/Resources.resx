<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="AboutProject" xml:space="preserve">
    <value>About Our Project</value>
  </data>
  <data name="Announcements" xml:space="preserve">
    <value>Announcements</value>
  </data>
  <data name="Assignments" xml:space="preserve">
    <value>Assignments</value>
  </data>
  <data name="Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="Calendar" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="DeleteEmail" xml:space="preserve">
    <value>Delete Email(s)</value>
  </data>
  <data name="DeleteEmailAsk" xml:space="preserve">
    <value>Are you sure you want to delete the selected email(s)?</value>
  </data>
  <data name="DeleteLiterature" xml:space="preserve">
    <value>Delete Literature(s)</value>
  </data>
  <data name="DeleteLiteratureAsk" xml:space="preserve">
    <value>Are you sure you want to delete the selected Literature(s)?</value>
  </data>
  <data name="DetailedResults" xml:space="preserve">
    <value>Zum Detaillierte Ergebnisse</value>
  </data>
  <data name="DiscussionForum" xml:space="preserve">
    <value>Discussion Forum</value>
  </data>
  <data name="Emails" xml:space="preserve">
    <value>Emails</value>
  </data>
  <data name="ExamResults" xml:space="preserve">
    <value>Exam Results</value>
  </data>
  <data name="GroupWorkspace" xml:space="preserve">
    <value>Group Workspace</value>
  </data>
  <data name="Hyperlinks" xml:space="preserve">
    <value>Hyperlinks</value>
  </data>
  <data name="LearningMaterials" xml:space="preserve">
    <value>Learning Materials</value>
  </data>
  <data name="Literature" xml:space="preserve">
    <value>Literature</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="LoginText" xml:space="preserve">
    <value>As soon as you click on the login button, you will be redirected to the RWTH L2P authentication
                            page and be prompted to enter your login credentials to provide access to our application.</value>
  </data>
  <data name="LogInVia" xml:space="preserve">
    <value>Log In via RWTH L2P</value>
  </data>
  <data name="MediaLibrary" xml:space="preserve">
    <value>Media Library</value>
  </data>
  <data name="MyCourses" xml:space="preserve">
    <value>My Courses</value>
  </data>
  <data name="MyDiscussions" xml:space="preserve">
    <value>My Discussions</value>
  </data>
  <data name="MySchedule" xml:space="preserve">
    <value>My Schedule</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Recent" xml:space="preserve">
    <value>Recent</value>
  </data>
  <data name="RecentAnnouncement" xml:space="preserve">
    <value>Recent Announcements</value>
  </data>
  <data name="RecentDiscussion" xml:space="preserve">
    <value>Recent Discussions</value>
  </data>
  <data name="Sender" xml:space="preserve">
    <value>Sender</value>
  </data>
  <data name="SharedDocuments" xml:space="preserve">
    <value>Shared Documents</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>
                Our Team Members Are:</value>
  </data>
  <data name="TeamMembers" xml:space="preserve">
    <value>This project was built to improve the mobile version of the RWTH Aachen L2P System. We are a group of 5 people that worked on making a responsive web version using Material UI.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="WhatsNew" xml:space="preserve">
    <value>What's New</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="AddAnnouncement" xml:space="preserve">
    <value>Add Announcement</value>
  </data>
  <data name="Announcement" xml:space="preserve">
    <value>Announcement</value>
  </data>
  <data name="Body" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="DeleteAnnouncement" xml:space="preserve">
    <value>Delete Announcement(s)</value>
  </data>
  <data name="DeleteAnnouncementMsg" xml:space="preserve">
    <value>Are you sure you want to delete the selected announcement(s)?</value>
  </data>
  <data name="EditAnnouncement" xml:space="preserve">
    <value>Edit Annoucement</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>Upload File</value>
  </data>
  <data name="UploadMessage" xml:space="preserve">
    <value>Please choose a file to upload</value>
  </data>
  <data name="ViewAnnouncement" xml:space="preserve">
    <value>View Announcement</value>
  </data>
  <data name="AddAssignment" xml:space="preserve">
    <value>Neue Aufgabe</value>
  </data>
  <data name="AddHyperlink" xml:space="preserve">
    <value>Add Hyperlink</value>
  </data>
  <data name="AddLiterature" xml:space="preserve">
    <value>Add Literature</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="DueDateTime" xml:space="preserve">
    <value>Due Date Time</value>
  </data>
  <data name="EditAssignment" xml:space="preserve">
    <value>Übung Bearbeiten</value>
  </data>
  <data name="EditHyperlink" xml:space="preserve">
    <value>Edit Hyperlink</value>
  </data>
  <data name="EditLiterature" xml:space="preserve">
    <value>Edit Literature</value>
  </data>
  <data name="GrpSubmission" xml:space="preserve">
    <value>Allow Group Submission</value>
  </data>
  <data name="SampleSolution" xml:space="preserve">
    <value>Please choose a sample solution file</value>
  </data>
  <data name="TotalPoints" xml:space="preserve">
    <value>Total Points</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ComposeEmail" xml:space="preserve">
    <value>Compose E-Mail</value>
  </data>
  <data name="DeleteEmails" xml:space="preserve">
    <value>Delete Email(s)</value>
  </data>
  <data name="DeleteEmailsMsg" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie die ausgewählte E-Mail ( s ) zu löschen?</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
</root>